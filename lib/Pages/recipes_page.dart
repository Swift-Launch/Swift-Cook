import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/rendering.dart';
import '../model/recipe.dart';

class RecipesPage extends StatefulWidget {
  @override
  RecipesPageState createState() => RecipesPageState();
}

class RecipesPageState extends State<RecipesPage> {
  bool canEdit = false;

  void toggleEdit() {
    setState(() {
      canEdit = !canEdit;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("Master"),
          actions: [
            IconButton(
              icon: Icon(Icons.edit),
              onPressed: () => setState(() {
                canEdit = !canEdit;
              }),
            ),
          ],
        ),
        body: RecipeListing(recipeSelectedCallback: (recipe) {
          Navigator.push(
            context,
            CupertinoPageRoute(
              builder: (BuildContext context) {
                return RecipeDetails(recipe: recipe);
              },
            ),
          );
        }));
  }
}

/** list view for all the recipes */
class RecipeListing extends StatelessWidget {
  const RecipeListing(
      {@required this.recipeSelectedCallback, this.selectedRecipe});

  final ValueChanged<Recipe> recipeSelectedCallback;
  final Recipe selectedRecipe;

  @override
  Widget build(BuildContext context) {
    return ListView(
      children: Recipe.getTestData().map((recipe) {
        // in the future this should probably be generated by some backend code
        return ListTile(
            title: Text(recipe.title),
            onTap: () => recipeSelectedCallback(recipe),
            selected: selectedRecipe == recipe);
      }).toList(),
    );
  }
}

class RecipeDetails extends StatelessWidget {
  RecipeDetails({@required this.recipe});

  final Recipe recipe;

  Widget _buildIngredientList() {
    return Container(
        child: ListView.separated(
            itemCount: recipe.ingredientList.length + 1,
            separatorBuilder: (BuildContext context, int index) => Divider(),
            itemBuilder: (BuildContext context, int index) {
              if (index == 0) {
                // return a header
                return Row(children: [
                  Text("Quantity"),
                  Text("Unit"),
                  Text("Ingredient"),
                ]);
              }
              index -= 1;

              var data = recipe.ingredientList[index];
              return Row(children: [
                Text(data.title),
                Text(data.quantity.toString()),
                Text(data.unit)
              ]);
            }),
        height: 400);
  }

  Widget _buildInstructionList() {
    return Container(child: Text("hello"));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text(recipe.title),
          actions: [IconButton(icon: Icon(Icons.edit), onPressed: null)],
        ),
        body: Column(
          children: [_buildIngredientList(), _buildInstructionList()],
        ));
  }
}
